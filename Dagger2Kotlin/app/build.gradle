apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion 28
    buildToolsVersion '28.0.3'
    defaultConfig {
        applicationId "com.example.raghu.dagger2testandroid"
        minSdkVersion 15
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    dataBinding {
        enabled = true
    }


}


dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "com.android.support:appcompat-v7:$rootProject.ext.supportlib"
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'

    implementation 'com.google.dagger:dagger-android:2.24'
    kapt 'com.google.dagger:dagger-compiler:2.24'
    kapt 'com.google.dagger:dagger-android-processor:2.24'
    implementation 'com.google.dagger:dagger-android-support:2.24'

    implementation group: 'com.squareup.retrofit2', name: 'retrofit', version: '2.6.2' +
            ''
    implementation group: 'com.squareup.okhttp3', name: 'okhttp', version: '3.12.1'
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.4.0'
    implementation 'com.squareup.retrofit2:converter-moshi:2.6.2'
    implementation("com.squareup.moshi:moshi-kotlin:1.8.0")
    kapt("com.squareup.moshi:moshi-kotlin-codegen:1.8.0")

    //implementation "com.squareup.retrofit2:converter-gson:$rootProject.ext.retrofit"
    implementation 'com.squareup.okhttp3:logging-interceptor:3.11.0'
    implementation "com.squareup.retrofit2:converter-scalars:$rootProject.ext.retrofit"

    implementation 'io.reactivex.rxjava2:rxjava:2.2.4'
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.0'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "org.jetbrains.kotlin:kotlin-reflect:1.3.50"
    implementation 'io.reactivex.rxjava2:rxkotlin:2.2.0'

    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.2"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.1.1"
    // https://mvnrepository.com/artifact/org.jetbrains.kotlinx/kotlinx-coroutines-core
    implementation group: 'org.jetbrains.kotlinx', name: 'kotlinx-coroutines-core', version: '1.3.2'


    testImplementation "org.mockito:mockito-core:3.0.0"
    // https://mvnrepository.com/artifact/org.mockito/mockito-core
    testImplementation group: 'org.mockito', name: 'mockito-core', version: '3.0.0'

    implementation 'com.jakewharton.retrofit:retrofit2-kotlin-coroutines-experimental-adapter:1.0.0'
    /*  testImplementation "org.jetbrains.kotlin:kotlin-test-junit:$kotlin_version"*/

    //kapt 'com.android.databinding:compiler:3.1.0'
    // https://mvnrepository.com/artifact/org.mockito/mockito-all
    testImplementation group: 'org.mockito', name: 'mockito-all', version: '2.0.2-beta'



}

configurations.all {
    resolutionStrategy.eachDependency { DependencyResolveDetails details ->
        def requested = details.requested
        if (requested.group == 'org.jetbrains.kotlin' && requested.name == 'kotlin-reflect') {
            details.useVersion kotlin_version
        }
    }
    resolutionStrategy {
        force 'com.android.support:support-vector-drawable:28.0.0'
        force 'com.android.support:support-media-compat:28.0.0'
        force 'com.android.support:support-v4:28.0.0'
        force 'com.google.code.findbugs:jsr305:1.3.9'
    }
}
